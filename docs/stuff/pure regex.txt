#include <iostream>
#include <iterator>
#include <string>
#include <regex>
#include <vector>

using std::string;
using std::vector;

vector <string> sytaxOutput(string input, string regex){
    std::regex word_regex(regex, std::regex_constants::icase);
    auto words_begin = std::sregex_iterator(input.begin(), input.end(), word_regex);
    auto words_end = std::sregex_iterator();
 
    int amountOfWords = std::distance(words_begin, words_end);
    
    vector <string> output;

    cout << "Words (" << amountOfWords <<"):\n";
    for (std::sregex_iterator i = words_begin; i != words_end; ++i) {
        std::smatch match = *i;
        output.push_back(match.str());
        
        if (output.back().size() > 0) {
            cout << "  " << output.back() << '\n';
        }
    }
    return output;
}
 
int main()
{
    string input = "let entity = obj; let bob =aaa; forall(me.collisionWith(entity)){ first(entity.inGroup(\"enemy\")){me.var.life -= 1; let gameVar = layer.master.game.var; if(me.var.life > 0){ layer.current.transform_into(layer(gameVar.currentWorld)); me.x = gameVar.lastCheckpointX; me.y = gameVar.lastCheckpointY; } else{ layer.current.transform_into(layer(gameVar.menu));}}first(entity.inGroup(\"mushroom\")){execute(\"power_up\");}forall(entity.inGroup(\"money\")){me.var.money += 1;entity.kill();}}";
    
    vector <string> brackets = sytaxOutput(input, "\\(|\\)|\\{|\\}");
    
    unsigned int numberOfBrackets = 0, numberOfCurlyBracket = 0;
    for(const string & bracket : brackets){
        if(bracket[0] == '(')
            numberOfBrackets++;
        if(bracket[0] == ')')
            numberOfBrackets--;
        if(bracket[0] == '{')
            numberOfCurlyBracket++;
        if(bracket[0] == '}')
            numberOfCurlyBracket--;
    }
    
    if(numberOfBrackets != 0){
        cout << "Syntax error: brackets are missing!\n";
        return -1;
    }
    
    if(numberOfCurlyBracket != 0){
        cout << "Syntax error: curly brackets are missing!\n";
        return -1;
    }
    
    vector <string> only_words = sytaxOutput(input, "(\"*[\\w+\\.*]*\\w+\"*)|;|==|=|>|<|>=|<=|-=|\\+=|\\+|-|\\*|/|%");
    
    vector <string> words = sytaxOutput(input, "(\"*[\\w+\\.*]*\\w+\"*)|;|==|=|>|<|>=|<=|-=|\\+=|\\+|-|\\*|/|%|\\(|\\)|\\{|\\}");
    
    
}