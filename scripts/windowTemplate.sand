start onInit
    triggers on_init
    var KEY_F11 57
end

start checkIfWindowMoved
	triggers mouse_pressing
	if ([mouse_moved] [isBorderless] ! &&)
	all Cameras _ camera _ Cameras
	find_by_id_2 Cameras cameraID Camera
	run revertWindowIfMoved refreshWindowWithCamera
end

start checkIfDisplayResize
	triggers on_display_resize
	if ([isMaxed] [on_display_resize] &&)
	run refreshWindowWithDisplay
end

start revertWindowIfMoved
	if ([isMaxed] [Camera grabbed] &&)
	= isMaxed false
	fun Camera set_can_mouse_resize true
    access MouseX [[mouse_x]]
	access MouseY [[mouse_y]]
	= posX MouseX
	= posY MouseY
	access sizeXTemp [[sizeX]]
	/= sizeXTemp 2
	-= posX sizeXTemp
	-= posY 10
	run revertBorderIfPossible revertWindowFromMax
end


start revertBorderIfPossible
	if ([isBorderless] ! [isMaxed] ! &&)
	all Layers _ _ _ _ _ _ Layers
	access myLayerID [[me layer_id]]
	find_by_id_2 Layers myLayerID Layer
	index Layer [0 0 2] primitives Border
	fun Border activate
end

start refreshWindowWithDisplay
	all Cameras _ camera _ Cameras
	find_by_id_2 Cameras cameraID Camera
	access sx [[window_w]]
	access sy [[window_h]]
	fun Camera resize sx sy
	run refreshWindow
end

start refreshWindowWithCamera
	all Cameras _ camera _ Cameras
	find_by_id_2 Cameras cameraID Camera
	access sx [[Camera size_x]]
	access sy [[Camera size_y]]
	run refreshWindow
end


start refreshWindow
	int sxShift -100
	+= sxShift sx
	int height 30

    fun Camera set_grabbing_area_size sxShift height

    access myLayerID [[me layer_id]]
    all Layers _ _ _ _ _ _ Layers
    find_by_id_2 Layers myLayerID Layer

    index Layer [0 0 0] primitives Primi
    fun Primi set_size sx sy
    fun Primi update_with_size

    index Layer [0 0 1] primitives Primi
    int height 30
    fun Primi set_size sx height
    fun Primi update_with_size

    index Layer [0 0 2] primitives Primi
    int sxShift -4
    int syShift -4
    += sxShift sx
    += syShift sy
    fun Primi set_size sxShift syShift
    fun Primi update_with_size

    index Layer [0 0 3] primitives Primi
    int sxShift -20
    int height 15
    += sxShift sx
    fun Primi set_pos sxShift height
    fun Primi update_with_size

    index Layer [0 0 0] collision ExitCollision
    fun ExitCollision set_pos sxShift height

    index Layer [0 0 4] primitives Primi
    int sxShift -50
    int height 15
    += sxShift sx
    fun Primi set_pos sxShift height
    fun Primi update_with_size

    index Layer [0 0 1] collision MaxCollision
    fun MaxCollision set_pos sxShift height

    index Layer [0 0 5] primitives Primi
    int sxShift -80
    int height 15
    += sxShift sx
    fun Primi set_pos sxShift height
    fun Primi update_with_size

    index Layer [0 0 2] collision MinCollision
    fun MinCollision set_pos sxShift height

    run updateIfNotMaxed additionalUpdate
end


start updateIfNotMaxed
    if([isMaxed] !)
    = sizeX sx
    = sizeY sy
    //print "x" _ c sx
    //print "\n" _ c sy
    access cpx [[Camera pos_x]]
    access cpy [[Camera pos_y]]
    = posX cpx
    = posY cpy
end


start additionalUpdate

end


start exitWindow
    triggers mouse_released
    if ([mouse_released 0])
    access myLayerID [[me layer_id]]
    all Layers _ _ _ _ _ _ Layers
    find_by_id_2 Layers myLayerID Layer
    index Layer [0 0 0] collision ExitCollision
    run exitWindowCheck
end

start exitWindowCheck
    if([ExitCollision release_on])
    = delete true
end

start deleteWindow
    triggers each_iteration
    if ([delete] [has_friends] ! [deleted_friends] || &&)
    all Cameras _ camera _ Cameras
    find_by_id_2 Cameras cameraID Camera
    delete Camera
    delete my_layer
end


start maxWindow
    triggers mouse_released
    if ([mouse_released 0])
    access myLayerID [[me layer_id]]
    all Layers _ _ _ _ _ _ Layers
    find_by_id_2 Layers myLayerID Layer
    index Layer [0 0 1] collision MaxCollision
    run maxWindowCheck
end

start maxWindowCheck
    if([MaxCollision release_on])
    fun isMaxed toggle_bool
    run maxWindowIfTrue refreshWindowWithCamera
end

start maxWindowIfTrue
    if([isMaxed])
    all Layers _ _ _ _ _ _ Layers
    access myLayerID [[me layer_id]]
    find_by_id_2 Layers myLayerID Layer
    index Layer [0 0 2] primitives Border
    fun Border deactivate
    all Cameras _ camera _ Cameras
    find_by_id_2 Cameras cameraID Camera
    fun Camera set_can_mouse_resize false
    access ww [[window_w]]
    access wh [[window_h]]
    fun Camera resize ww wh
    fun Camera set_relative_position 0 0
    else revertWindowFromMax
end

start revertWindowFromMax
    all Cameras _ camera _ Cameras
    find_by_id_2 Cameras cameraID Camera
    fun Camera set_can_mouse_resize true
    fun Camera resize sizeX sizeY
    fun Camera set_relative_position posX posY
    restart_drag
    run revertBorderIfPossible
end


start minimizeWindow
    triggers mouse_released
    if ([mouse_released 0])
    access myLayerID [[me layer_id]]
    all Layers _ _ _ _ _ _ Layers
    find_by_id_2 Layers myLayerID Layer
    index Layer [0 0 2] collision MinCollision
    all Cameras _ camera _ Cameras
    find_by_id_2 Cameras cameraID Camera
    run minimizeWindowCheck
end


start minimizeWindowCheck
    if([MinCollision release_on])
    fun Camera minimize
end


start switchBorderlessMode
    triggers key_pressed
    if ([key_pressed KEY_F11])
    all Cameras _ camera _ Cameras
    find_by_id_2 Cameras cameraID Camera
    run switchBorderlessModeCheckFocus
end


start switchBorderlessModeCheckFocus
    if([Camera is_focused])
    fun isBorderless toggle_bool
    run switchToBorderless
end

start switchToBorderless
    if ([isBorderless])
    fun me set_pos -5 -30
    all Layers _ _ _ _ _ _ Layers
    access myLayerID [[me layer_id]]
    find_by_id_2 Layers myLayerID Layer
    index Layer [0 0 1] primitives Toolbar
    fun Toolbar deactivate
    index Layer [0 0 2] primitives Border
    fun Border deactivate
    index Layer [0 0 3] primitives ExitButton
    fun ExitButton deactivate
    index Layer [0 0 4] primitives MaxButton
    fun MaxButton deactivate
    index Layer [0 0 5] primitives MinButton
    fun MinButton deactivate
    index Layer [0 0 0] super_text Title
    fun Title deactivate
    index Layer [0 0 0] collision ExitCollision
    fun ExitCollision deactivate
    index Layer [0 0 1] collision MaxCollision
    fun MaxCollision deactivate
    index Layer [0 0 2] collision MinCollision
    fun MinCollision deactivate
    all Cameras _ camera _ Cameras
    find_by_id_2 Cameras cameraID Camera
    fun Camera set_can_be_grabbed false
    fun Camera set_can_mouse_resize false
    access cpx [[Camera size_x]]
    access cpy [[Camera size_y]]
    += cpx 10
    += cpy 80
    index Layer [0 0 0] primitives Background
    fun Background set_size cpx cpy
    fun Background update_with_size
    else switchFromBorderless
end

start switchFromBorderless
    all Layers _ _ _ _ _ _ Layers
    fun me set_pos 0 0
    access myLayerID [[me layer_id]]
    find_by_id_2 Layers myLayerID Layer
    index Layer [0 0 1] primitives Toolbar
    fun Toolbar activate
    index Layer [0 0 3] primitives ExitButton
    fun ExitButton activate
    index Layer [0 0 4] primitives MaxButton
    fun MaxButton activate
    index Layer [0 0 5] primitives MinButton
    fun MinButton activate
    index Layer [0 0 0] super_text Title
    fun Title activate
    index Layer [0 0 0] collision ExitCollision
    fun ExitCollision activate
    index Layer [0 0 1] collision MaxCollision
    fun MaxCollision activate
    index Layer [0 0 2] collision MinCollision
    fun MinCollision activate
    all Cameras _ camera _ Cameras
    find_by_id_2 Cameras cameraID Camera
    fun Camera set_can_be_grabbed true
    fun Camera set_can_mouse_resize true
    run revertBorderIfPossible
end
