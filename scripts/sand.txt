start onInit
triggers on_init
//edit_proc draw_hitboxes 1
//edit_proc print_instructions 1
//edit_proc auto_print_stack 1

edit_proc draw_camera_borders 1

load_bitmap "images/background2.png" background2
load_bitmap "images/background3.png" background3
load_bitmap "images/amongus1.png" amongus1
load_bitmap "images/amongus2.png" amongus2
load_bitmap "images/amongus3.png" amongus3
load_bitmap "images/terry.png" terry
load_bitmap "images/arch.jpg" arch
load_bitmap "images/cobblestone.png" cobblestone
load_bitmap "images/elephant.jpg" elephant

string ["fonts/fira_mono.ttf"] path
int [20] size
string ["fira_mono"] name
load_font path size name

string ["fonts/CascadiaCode.ttf"] path
int [20] size
string ["cascadia_code"] name
load_font path size name

string ["fonts/CascadiaCode-Bold.ttf"] path
int [20] size
string ["cascadia_code_bold"] name
load_font path size name

run resizeDisplay buildTerminal createWindowTemplate
end


start resizeDisplay
if ([used_os] [string "windows"] ==)
//env window_size 1366 568
//edit_proc window_size 1366 568
edit_proc window_size 1920 1080
env window_size 1366 768//640 480//1920 1080
else resizeDisplayLinux
end

start resizeDisplayLinux
if ([used_os] [string "linux"] ==)
///env window_size 1366 568
//edit_proc window_size 1366 568
env window_size 800 300
edit_proc window_size 1920 1080
end


start buildTerminal
value ([window_w]) ww
value ([window_h]) wh

new camera l 1 _ _ Cam
//fun Cam set_position int [100 100]
fun Cam set_id string [Desktop]
fun Cam set_active bool [true]
fun Cam resize c ww c wh
fun Cam set_zoom double [1.0]
fun Cam set_speed double [20]
fun Cam set_key_zoom_in int [15]
fun Cam set_key_zoom_out int [21]
fun Cam set_zoom_increase double [0.02]
fun Cam add_visible_layer string [KERNEL]
fun Cam add_accessible_layer string [KERNEL]
fun Cam set_tint double [1.0 1.0 1.0 1.0]
fun Cam set_can_move_with_mouse bool [1]
fun Cam set_can_zoom_with_mouse bool [0]
fun Cam set_can_move_with_keyboard bool [0]
fun Cam set_can_zoom_with_keyboard bool [0]
fun Cam set_drawing_borders bool [0]
fun Cam set_samples int [4]

new image c me 1 _ _ background
//fun background deactivate
fun background connect_bitmap_via_alias string [background2]
fun background attach_to_camera
fun background resize c ww c wh
fun background set_color double [0.5 0.5 0.5 0.5]

int [640] windowSizeX
int [480] windowSizeY
int [0 0] editableTextPos

new editable_text c me 1 _ _ TerminalTextField
//fun TerminalTextField attach_to_camera
fun TerminalTextField set_id string [edi]
fun TerminalTextField set_position c editableTextPos
fun TerminalTextField set_font string [cascadia_code]
fun TerminalTextField set_wrapping int [1]
fun TerminalTextField set_editable bool [1]
fun TerminalTextField set_space_use bool [1]
fun TerminalTextField set_max_content_length int [10000]
fun TerminalTextField add_new_and_update string ["Welcome in Sandstorm Box terminal!"]
fun TerminalTextField set_size int [1920 1080]
fun TerminalTextField select_layer int [1]
fun TerminalTextField set_color double [0.0 1.0 0.0 1.0]
fun TerminalTextField set_input_delay double [0.3]
fun TerminalTextField set_repetition_delay double [0.05]
fun TerminalTextField set_use_tabs bool [1]
fun TerminalTextField set_enter_use bool [0]
fun TerminalTextField set_can_enter_accept bool [0]
fun TerminalTextField set_protected_area int [37]

new editable_text c me 1 _ _ TextEditor
clone TextEditor TerminalTextField
fun TextEditor set_id string [TextEditor]
fun TextEditor set_protected_area int [0]
fun TextEditor set_enter_use bool [1]
fun TextEditor set_text int [0] string [""]
fun TextEditor deactivate

var string "_enter" program
var string "" param0
var string "" param1
var string "" param2
var string "" param3
var string "" param4
var string "" param5
var string "" param6
var string "" param7
var int 20 roundingSize



var string "scripts" dir

end


start createWindowTemplate
new layer l 1 _ _ WindowLayer
fun WindowLayer deactivate
fun WindowLayer set_id string [WindowLayer]
value ([context WindowLayer id]) newLayerID

new camera l 1 _ _ WindowCamera
fun WindowCamera set_position int [0 0]
fun WindowCamera set_id string [WindowCamera]
fun WindowCamera set_active bool [true]
fun WindowCamera resize int [640 480]
fun WindowCamera set_zoom double [1.0]
fun WindowCamera set_speed double [20]
fun WindowCamera set_key_zoom_in int [15]
fun WindowCamera set_key_zoom_out int [21]
fun WindowCamera set_zoom_increase double [0.02]
fun WindowCamera bind_keys int [15 21 13 9 12 11 10]
fun WindowCamera set_tint double [1.0 1.0 1.0 1.0]
fun WindowCamera set_drawing_borders bool [0]
fun WindowCamera set_can_interact_with_mouse bool [1]
fun WindowCamera set_can_move_with_mouse bool [1]
//fun WindowCamera add_visible_layer string [WindowLayer]
//fun WindowCamera add_accessible_layer string [WindowLayer]
fun WindowCamera set_grabbing_area_size int [540 50]
fun WindowCamera pin_to_camera string [Desktop]
fun WindowCamera activate_pin
fun WindowCamera set_samples int [8]
fun WindowCamera set_min_size int [300 34]
fun WindowCamera deactivate

new object c WindowLayer 1 _ _ NewWindowObject
fun NewWindowObject set_id string [WindowObject]
fun NewWindowObject set_can_be_selected bool [0]
bind NewWindowObject literal ["scripts/windowTemplate.sand"]
build NewWindowObject true

new variable c NewWindowObject 1 _ _ objectsCameraID
fun objectsCameraID set_id string ["cameraID"]
fun objectsCameraID set_string string ["WindowCamera"]

new variable c NewWindowObject 1 _ _ isMaxed
fun isMaxed set_id string ["isMaxed"]
fun isMaxed set_bool bool [false]
new variable c NewWindowObject 1 _ _ sizeX
fun sizeX set_id string ["sizeX"]
fun sizeX set_double double [640]
new variable c NewWindowObject 1 _ _ sizeY
fun sizeY set_id string ["sizeY"]
fun sizeY set_double double [480]
new variable c NewWindowObject 1 _ _ posX
fun posX set_id string ["posX"]
fun posX set_double double [0]
new variable c NewWindowObject 1 _ _ posY
fun posY set_id string ["posY"]
fun posY set_double double [0]
new variable c NewWindowObject 1 _ _ isBorderless
fun isBorderless set_id string ["isBorderless"]
fun isBorderless set_bool bool [false]

new primitives c NewWindowObject 1 _ _ border1
fun border1 set_id string [background]
fun border1 set_type string [filled_rectangle]
fun border1 add_point double [0.0 0.0]
fun border1 add_point double [640 480]
fun border1 set_color double [1.0 1.0 1.0 0.7]
fun border1 select_layer int [0]
fun border1 set_size int [640 480]
fun border1 update_with_size

new primitives c NewWindowObject 1 _ _ border2
clone border2 border1
fun border2 set_id string [toolbar]
fun border2 set_color double [0.109 0.537 0.2039 1.0]
fun border2 select_layer int [1]
fun border2 set_size int [640 30]
fun border2 update_with_size

new primitives c NewWindowObject 1 _ _ border3
clone border3 border1
fun border3 set_id string [border]
fun border3 set_type string [rectangle]
fun border3 set_color double [0.109 0.537 0.2039 1.0]
fun border3 set_position int [2 2]
fun border3 set_size int [636 476]
fun border3 set_thickness double [5.0]
fun border3 select_layer int [0]
fun border3 update_with_size

new primitives c NewWindowObject 1 _ _ exitButton
fun exitButton set_id string [exitButton]
fun exitButton set_type string [filled_circle]
fun exitButton add_point double [0.0 0.0]
fun exitButton add_point double [5 5]
fun exitButton set_color double [1.0 0.0 0.0 1.0]
fun exitButton select_layer int [2]
fun exitButton set_position int [620 15]
fun exitButton set_size int [20 20]
fun exitButton update_with_size

new collision c NewWindowObject 1 _ _ ExitCollision
fun ExitCollision attach_to_camera
fun ExitCollision set_position double [620 15]
fun ExitCollision set_size double [10 10]
fun ExitCollision set_is_circle bool [true]

new primitives c NewWindowObject 1 _ _ MaxButton
clone MaxButton exitButton
fun MaxButton set_id string [MaxButton]
fun MaxButton set_position int [590 15]
fun MaxButton set_color double [1.0 1.0 0.0 1.0]

new collision c NewWindowObject 1 _ _ MaxCollision
fun MaxCollision attach_to_camera
fun MaxCollision set_position double [590 15]
fun MaxCollision set_size double [10 10]
fun MaxCollision set_is_circle bool [true]

new primitives c NewWindowObject 1 _ _ minimizeButton
clone minimizeButton exitButton
fun minimizeButton set_id string [minimizeButton]
fun minimizeButton set_position int [560 15]
fun minimizeButton set_color double [0.0 1.0 0.0 1.0]

new collision c NewWindowObject 1 _ _ MinCollision
fun MinCollision attach_to_camera
fun MinCollision set_position double [560 15]
fun MinCollision set_size double [10 10]
fun MinCollision set_is_circle bool [true]

new text c NewWindowObject 1 _ _ title
fun title set_id string [title]
fun title set_position int [10 2]
fun title set_font string [cascadia_code]
fun title set_wrapping int [0]
fun title add_new_and_update s ["Template Window"]
fun title set_size int [400 50]
fun title select_layer int [-1]
fun title set_color double [1.0 1.0 1.0 0.0]
fun title attach_to_camera
end


start nw
run spawnNewWindow
end


start spawnNewWindow
all camera _ camera _ Cameras
string ["WindowCamera"] cameraID
find_by_id_2 Cameras cameraID TemplateCamera
all layer _ _ _ _ _ _ Layers
string ["WindowLayer"] layerID
find_by_id_2 Layers layerID TemplateLayer

new layer l 1 _ _ NewWindowLayer
clone NewWindowLayer TemplateLayer
fun NewWindowLayer set_id c param1
value ([context NewWindowLayer id]) newLayerID
fun NewWindowLayer activate

index c NewWindowLayer [0 0 0] _ text Title
int [0] zero
fun Title set_text c zero c param1

new camera l 1 _ _ NewWindowCamera
clone NewWindowCamera TemplateCamera
fun NewWindowCamera set_id c param1
value ([context NewWindowCamera id]) newCameraID
fun NewWindowCamera activate
fun NewWindowCamera add_visible_layer c newLayerID
fun NewWindowCamera add_accessible_layer c newLayerID
index c NewWindowLayer [0 0 0] _ variable objectsCameraID
= objectsCameraID newCameraID
string [""] program
end


start note
int [0] NewWindowLayer
//dump_context_stack
string [""] fileName
= fileName param1
string ["Note"] param1
run spawnNewWindow spawnNotepad
end


start spawnNotepad
index c me [0 1] _ editable_text Editable
index c NewWindowLayer [0 0] _ object Object
index c NewWindowLayer [0 0 0] _ primitives Background
fun Background set_color double [0.0 0.0 0.0 1.0]
new editable_text c Object 1 _ _ TextEditor
clone TextEditor Editable
fun TextEditor attach_to_camera
fun TextEditor set_id string ["Notepad"]
fun TextEditor set_position int [5 30]
fun TextEditor set_text int [0] string [""]
fun TextEditor activate
fun TextEditor set_color double [1.0 0.0 0.0 1.0]
fun TextEditor select_layer int [1]
fun TextEditor set_wrapping int [0]
fun TextEditor set_size int [640 480]
bind Object literal ["scripts/notepad.sand"]
build Object false
run loadTextFromFile
end


start mover
int [0] NewWindowLayer
string [""] selectedLayerID
= selectedLayerID param1
string ["Mover"] param1
int [0] NewWindowCamera
run spawnNewWindow spawnMover
end


start spawnMover
index c me [0 1] _ editable_text Editable
index c NewWindowLayer [0 0] _ object Object
index c NewWindowLayer [0 0 0] _ primitives Background
fun Background set_color double [0.0 0.0 0.0 1.0]
//value ([context my_layer id]) selectedLayerID
value ([context NewWindowCamera id]) windowCameraID
dump_context_stack
new camera l 1 _ _ InsideCamera
fun InsideCamera activate
fun InsideCamera add_visible_layer c selectedLayerID
fun InsideCamera add_accessible_layer c selectedLayerID
fun InsideCamera pin_to_camera c windowCameraID
fun InsideCamera activate_pin
fun InsideCamera set_relative_position int [5 30]
fun InsideCamera resize int [630 440]
//bind Object literal ["scripts/notepad.sand"]
//build Object false
//run loadTextFromFile
end


start interrupt
triggers key_pressed
if ([key_pressed 215] [key_pressed 3] &&) //217-ctrl, 215-shift, 3-c
string ["_enter"] program
end



start controler
triggers each_iteration
if ([context program] [string ""] ==)
string ["$ "] result
string ["sleep"] program
run printOnTerminal
end


start clearOnShortcut
triggers key_pressed
if ([context program] [string "sleep"] == [key_pressed 217] && [key_pressed 12] &&)
run cls
end



start controlerWithEnter
triggers each_iteration
if ([context program] [string "_enter"] ==)
string ["\n$ "] result
string ["sleep"] program
run printOnTerminal
end





start fs_click false
triggers key_pressed
if ([key_pressed 58])
run setFullscreen
end

start fullscreen false
string [""] program
run setFullscreen
end

start fs false
string [""] program
run setFullscreen
end

start setFullscreen false
if ([fullscreen] !)
env fullscreen 1
else fs_else
end

start fs_else false
env fullscreen 0
end

start refresh false
triggers on_display_resize
if([on_display_resize])
value ([window_w]) w
value ([window_h]) h
index camera [0] _ camera Cam0
fun Cam0 resize c w c h
index context me [0 0] _ image background
fun background resize c w c h

index layer [0 1] _ object Terminal
index context Terminal [0 0] _ editable_text EditableText
fun EditableText set_size c w c h
end


start enter
triggers key_pressed
if ([key_pressed 67] [context program] [string "sleep"] == &&)
index camera [0] _ camera Camera
run enter1
end


start enter1
if ([c Camera is_focused])
index layer [0 1] _ object Terminal
index context Terminal [0 0] _ editable_text EditableText
first _ [EditableText] _ _ _ _ content _ userInput
first _ [EditableText] _ _ _ _ protected_area _ protectedArea
len userInput userInputSize
substr userInput protectedArea userInputSize command

string [""] param0
string [""] param1
string [""] param2
string [""] param3
string [""] param4
string [""] param5
string [""] param6
string [""] param7

tokenize command param0 param1 param2 param3 param4 param5 param6 param7

string [neofetch help hello ls sq cats sh fullscreen fs nw note mover spawn 222 cls cat print exit edit sand cd pwd] allowedPrograms
in param0 allowedPrograms isAllowed
string ["_enter"] program
run programCheck
end

start programCheck
if ([context isAllowed])
string ["run "] run
+= run param0
string ["run"] program
inject_instr me run
string ["\n"] result
run printOnTerminal
else programNotFound
end

start programNotFound
if ([context param0] [string ""] !=)
string ["\nCommand not found!"] result
run printOnTerminal
end


start printOnTerminal
index layer [0 1] _ object Terminal
index context Terminal [0 0] _ editable_text EditableText
int [0] zero
//fun EditableText add_text int [0] string ["\n"]
fun EditableText add_text context zero context result
first _ [EditableText] _ _ _ _ content _ history
len history historySize
fun EditableText set_protected_area c historySize
fun EditableText set_cursor_pos c historySize
end



start edit
string ["edit"] program
index layer [0 1] _ object Terminal
index context Terminal [0 0] _ editable_text TerminalTextField
fun TerminalTextField deactivate
index context Terminal [0 1] _ editable_text TextEditor
fun TextEditor set_text int [0] string [""]
fun TextEditor set_cursor_pos int [0]
fun TextEditor activate
string [""] fileName
= fileName param1
run loadTextFromFile
end

start loadTextFromFile
if ([exists fileName])
load_text fileName loadedText
int [0] 0
fun TextEditor set_text c 0 c loadedText
len loadedText loadedTextSize
fun TextEditor set_cursor_pos c loadedTextSize
end

start textEditorInsert
triggers key_pressed
if([context program] [string "edit"] == [key_pressed 217] && [key_pressed 9] &&)
first layer KERNEL KERNEL editable_text TextEditor editing_is_active _ isEditing
run checkIfInsertPressed
end

start checkIfInsertPressed
if([context isEditing] !)
reset_keyboard
bool [true] isEditing
end

start textEditorExit
triggers key_pressed
if([context program] [string "edit"] == [key_pressed 217] && [key_pressed 17] &&)
string [""] program
index layer [0 1] _ object Terminal
index context Terminal [0 0] _ editable_text TerminalTextField
fun TerminalTextField activate
index context Terminal [0 1] _ editable_text TextEditor
fun TextEditor deactivate
fun TextEditor stop_editing
end

start textEditorSave
triggers key_pressed
if([context program] [string "edit"] == [key_pressed 217] && [key_pressed 19] &&)
index layer [0 1] _ object Terminal
index context Terminal [0 1] _ editable_text TextEditor
first _ [TextEditor] _ _ _ _ content _ writtenText
save_text param1 writtenText
end

start sand
load_build me param1
string [""] program
end
