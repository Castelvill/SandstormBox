start putRectangleOnScreen
    triggers each_iteration

    var DISPLAY_W 640
    var DISPLAY_H 480
    access display_w [[display_w]]
    access display_h [[display_h]]
    = DISPLAY_W display_w
    = DISPLAY_H display_h

    var SIZE_X 120
    var SIZE_Y 100
    var x 10.0
	var y 10.0
    var velX 4.0
    var velY 4.0

    new primitives me 1 "Rectangle" Rectangle
    fun Rectangle set_type "filled_rectangle"
    fun Rectangle add_point 0.0 0.0
    fun Rectangle add_point 1.0 1.0
    fun Rectangle set_color 1.0 0.0 0.0 1.0
    fun Rectangle set_pos x y
    fun Rectangle set_size SIZE_X SIZE_Y
    fun Rectangle update_with_size

    load_font "fonts/CascadiaCode.ttf" 16 "cascadia_code_2" true

    new super_text me 1 "Fps" FpsText
    fun FpsText disable_scrolling
    fun FpsText set_pos 400 0
    fun FpsText set_size 400 50
    fun FpsText add_format "cascadia_code_2" 1
    fun FpsText set_color 0 0.0 1.0 0.0 1.0
    fun FpsText set_wrapping "n"
    fun FpsText set_content "FPS"

	delete_this_event
end

start updateFiledWithResize
    triggers on_display_resize
    access display_w [[display_w]]
    access display_h [[display_h]]
    = DISPLAY_W display_w
    = DISPLAY_H display_h

    = x 10.0
	= y 10.0
end

start printFPS
    triggers each_second

    all me _ _ super_text _ _ _ Texts
    find_by_id_2 Texts "Fps" FpsText
    access fpsValue [[fps]]
    string fpsString "FPS: "
    += fpsString fpsValue
    fun FpsText set_content fpsString
	fun FpsText update
end

start moveRectangle
	triggers each_iteration
    + x SIZE_X xs
    + y SIZE_Y ys
    run bounceY bounceX
after
	+= x velX
	+= y velY
    //index me [0 0] primitives Rectangle
    all me _ _ primitives _ _ _ Primitives
	find_by_id_2 Primitives "Rectangle" Rectangle
    fun Rectangle set_pos x y
end

start bounceX
    if([x] [0] <= [xs] [DISPLAY_W] >= ||)
    *= velX -1.0
end

start bounceY
    if([y] [0] <= [ys] [DISPLAY_H] >= ||)
    *= velY -1.0
end


