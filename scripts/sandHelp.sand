start help
    string [""] xd
    print " " result c allowedPrograms
    index context me [0 0] _ super_editable_text EditableText
    fun EditableText modify_last_format double [1.0 0.8 0.0 1.0] double [0.0 0.0 0.0 1.0] string [cascadia_code] int [1]
    string ["_enter"] program
    run printOnTerminal
end


start ls
    if ([exists param1] [c param1] [string ""] == ||)
    ls param1 result
    tokenize " " result files
    index c me [0 0] _ super_editable_text EditableText
    int [0] fileIndex
	run lsColoringLoop
    else informFileDoesNotExistForCD
post
    string ["_enter"] program
end
start lsColoringLoop true
	if ([c fileIndex] [c files size] <)
	index c files _ [fileIndex] value file
    len file fileNameLength
    int [5] length
    -= fileNameLength length
	++ fileIndex
	run colorIfDirectory printFileNameOnTerminal
end
start colorIfDirectory
	if([c param1 size] [int 0] >)
    string [""] fullPath
    = fullPath param1 
    string ["/"] backslash
    += fullPath backslash
    += fullPath file
    run colorIfDirectory2
	else colorIfSandScript
end
start colorIfDirectory2
	if ([is_directory fullPath])
    fun EditableText modify_last_format double [0.3 0.3 1.0 1.0] double [0.0 0.0 0.3 1.0] string [cascadia_code] int [1]
	else colorIfSandScript
end
start colorIfSandScript
    if([c fileNameLength] [int 0] >)
    substr file fileNameLength length extension
    run colorIfSandScript2
    else colorIfNormalFile
end
start colorIfSandScript2
    if([c extension] [string ".sand"] ==)
    fun EditableText modify_last_format double [0.0 0.9 0.0 1.0] double [0.0 0.3 0.0 1.0] string [cascadia_code] int [1]
    else colorIfNormalFile
end
start colorIfNormalFile
	fun EditableText modify_last_format double [0.86 0.85 0.86 1.0] double [0.0 0.0 0.0 1.0] string [cascadia_code] int [1]
end
start printFileNameOnTerminal
	print "  " result c file
	run printOnTerminal
end



start cls
    index context me [0 0] _ super_editable_text History
    fun History set_content string [""]
    string [""] program
end


start neofetch
    print _ result string ["
 ┌────────────────────┐   Mateusz                        
 │@*,*'*:*'**'*:**'**@│   -----------------------        
 │'$$##+  ' ,'- ,*,:$*│   OS: Sandstorm Box              
 │* : *%+* .,. ,-  %:*│   Kernel: 0.2                    
 │:.  ,  g+$$kg, ,##,'│   Shell: Sandbox 0.2             
 │* ,*  d$$''?$b  +*.*│   Uptime: 420 hours, 4 mins      
 │' .'  d?x, :   *+, :│   Display (PHL 223V5): 1920x1080 
 │*' .*  sR$$&Y ' ', *│   Display (SMS19A100): 1366x768  
 │. *+,.., :`T$i * :,:│   DE: i4                         
 │',,+  d$x,,$$i  ', *│   Theme: Bees Dark               
 │*,%#  `*c$$?+ ., . *│   CPU: 12th Gen Intel i5-12600KF 
 │* %, *., '  __ .   :│   GPU: AMD Radeon RX 6700 XT     
 │*$, ,, .'. ' *+%#% *│   Memory: 12819MiB / 32592MiB    
 │@:''*'.:*.*'.:**.#$@│                                  
 └────────────────────┘                                  

"]
    index context me [0 0] _ super_editable_text EditableText
    fun EditableText modify_last_format double [0.0 1.0 0.0 1.0] double [0.0 1.0 0.0 1.0] string [cascadia_code] int [1]
    string [""] program
    run printOnTerminal
end

start xd
    print _ result string ["@       @  @@@@@@   
 @     @   @     @@ 
  @   @    @       @
   @ @     @       @
    @      @       @
   @ @     @       @
  @   @    @       @
 @     @   @     @@ 
@       @  @@@@@@   
"]
    index context me [0 0] _ super_editable_text EditableText
    fun EditableText modify_last_format double [0.0 1.0 0.0 1.0] double [0.0 1.0 0.0 1.0] string [cascadia_code] int [1]
    string [""] program
    run printOnTerminal 
end

start sel_col
    = terminalColorR param1
    = terminalColorG param2
    = terminalColorB param3
    = terminalColorA param4
    string [""] program
end

start 222
    int [1 2 3 4] x
    int [2 2 1 1] y
    += x x
    print " " result c x
    string ["\n"] endl
    += result endl
    string [""] program
    run printOnTerminal
end


start winfetch
    print _ result string ["                                ..,   Mateusz@DESKTOP-JVU6QTR
                    ....,,:;+ccllll   -----------------------
      ...,,+:;  cllllllllllllllllll   OS: Windows 10 Pro x86_64
,cclllllllllll  lllllllllllllllllll   Host: Gigabyte
llllllllllllll  lllllllllllllllllll   Kernel: 10.0.xxxx
llllllllllllll  lllllllllllllllllll   Uptime: 10 hours, 4 mins
llllllllllllll  lllllllllllllllllll   Packages: 4 (scoop)
llllllllllllll  lllllllllllllllllll   Shell: bash 5.2.x
llllllllllllll  lllllllllllllllllll   Resolution: 1366x768
                                      DE: Aero
llllllllllllll  lllllllllllllllllll   WM: Explorer
llllllllllllll  lllllllllllllllllll   WM Theme: Custom
llllllllllllll  lllllllllllllllllll   CPU: 12th Gen Intel i5-12600KF (16) @ 3.690GHz
llllllllllllll  lllllllllllllllllll   GPU: Caption
llllllllllllll  lllllllllllllllllll   GPU: AMD Radeon RX 6700 XT
`'ccllllllllll  lllllllllllllllllll   GPU
       `' \*::  :ccllllllllllllllll   Memory: 12819MiB / 32592MiB
                       ````''*::cll
                                 ``
"]
    string [""] program
    run printOnTerminal
end


start hello
    print _ result string ["Hello, world!\n"]
    string [""] program
    run printOnTerminal
end


start cats
    print _ result string ["                      /^--^\     /^--^\     /^--^\
                      \____/     \____/     \____/
                     /      \   /      \   /      \
                    |        | |        | |        |
                     \__  __/   \__  __/   \__  __/
|^|^|^|^|^|^|^|^|^|^|^|^\ \^|^|^|^/ /^|^|^|^|^\ \^|^|^|^|^|^|^|^|^|^|^|^|
| | | | | | | | | | | | |\ \| | |/ /| | | | | | \ \ | | | | | | | | | | |
| | | | | | | | | | | | / / | | |\ \| | | | | |/ /| | | | | | | | | | | |
| | | | | | | | | | | | \/| | | | \/| | | | | |\/ | | | | | | | | | | | |
#########################################################################
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
"]
    string [""] program
    run printOnTerminal
end


start sq
    print _ result string ["        .--'''''''''--.
     .'      .---.      '.
    /    .-----------.    \
   /        .-----.        \
   |       .-.   .-.       |
   |      /   \ /   \      |
    \    | .-. | .-. |    /
     '-._| | | | | | |_.-'
         | '-' | '-' |
          \___/ \___/
       _.-'  /   \  `-._
     .' _.--|     |--._ '.
     ' _...-|     |-..._ '
            |     |
            '.___.'
              | |
"]
    string [""] program
    run printOnTerminal
end


start print
    print _ result c param1
    string ["_enter"] program
    run printOnTerminal
end


start spawn
    new layer l 1 _ _ AmogusLayer
    fun AmogusLayer activate
    fun AmogusLayer set_id string [AmogusLayer]
    value ([context AmogusLayer id]) newLayerID

    //print ": " _ c AmogusLayer

    new camera l 1 _ _ NewWindow
    fun NewWindow set_position int [0 0]
    fun NewWindow set_id string [AmogusWindow0]
    fun NewWindow set_active bool [true]
    fun NewWindow resize int [640 480]
    fun NewWindow set_zoom double [1.0]
    fun NewWindow set_speed double [20]
    fun NewWindow set_key_zoom_in int [15]
    fun NewWindow set_key_zoom_out int [21]
    fun NewWindow set_zoom_increase double [0.02]
    fun NewWindow bind_keys int [15 21 13 9 12 11 10]
    fun NewWindow set_tint double [1.0 1.0 1.0 1.0]
    fun NewWindow set_drawing_borders bool [0]
    fun NewWindow set_can_be_modified_by_mouse bool [1]
    fun NewWindow set_is_vision_affected_by_mouse bool [1]
    fun NewWindow add_visible_layer c newLayerID
    fun NewWindow add_accessible_layer c newLayerID
    fun NewWindow set_grabbing_area_size int [640 50]
    fun NewWindow pin_to_camera string [Desktop]
    fun NewWindow activate_pin
    value ([context NewWindow id]) newWindowID

    //print \n _ c NewWindow

    new object c AmogusLayer 1 _ _ NewWindowObject
    fun NewWindowObject set_id string [Window]
    fun NewWindowObject set_can_be_selected bool [0]

    new primitives c NewWindowObject 1 _ _ border1
    fun border1 set_id string [background]
    fun border1 set_type string [filled_rounded_rectangle]
    fun border1 add_point double [0.0 0.0]
    fun border1 add_point double [880 980]
    fun border1 add_point c roundingSize c roundingSize
    fun border1 set_color double [0.0 0.0 0.0 0.7]
    fun border1 set_thickness double [10.0]
    fun border1 set_size int [640 480]
    fun border1 update_with_size

    new primitives c NewWindowObject 1 _ _ border2
    clone border2 border1
    fun border2 set_id string [toolbar]
    fun border2 set_color double [0.0 0.0 0.0 0.8]
    fun border2 set_size int [640 50]
    fun border2 update_with_size

    new super_text c NewWindowObject 1 _ _ title
    fun title set_id string [title]
    fun title set_position int [10 10]
    fun title set_size int [400 50]
    fun title add_format string [cascadia_code_bold] int [8]
    fun title set_color int [0] double [1.0 1.0 1.0 1.0]
    fun title set_wrapping string [n]
    fun title set_content c param1

    new object c AmogusLayer 1 _ _ NewAmo
    fun NewAmo set_id string [Amongus]
    fun NewAmo set_position double [0 80]
    new image c NewAmo 1 _ _ redAstronaut
    fun redAstronaut set_id string [amongus]
    fun redAstronaut connect_bitmap_via_alias c param1
    fun redAstronaut set_scale double [0.6 0.6]
    string [""] program
end


start sh
    string [""] instruction
    string [" "] space
    += instruction param1
    += instruction space
    += instruction param2
    += instruction space
    += instruction param3
    += instruction space
    += instruction param4
    += instruction space
    += instruction param5
    += instruction space
    += instruction param6
    += instruction space
    += instruction param7

    /*print \n _ c param1
    print \n _ c param2
    print \n _ c instruction*/

    string [""] program
    inject_instr me instruction
end


start cat
    if ([exists param1])
    load_text param1 result
    string [""] program
    index context me [0 0] _ super_editable_text EditableText
    fun EditableText modify_last_format double [0.2 0.74 0.7 1.0] double [0.0 0.0 0.0 1.0] string [cascadia_code] int [1]
    run printOnTerminal
    else printNoSuchFile
end


start printNoSuchFile
    string ["_enter"] program
    string ["File '"] result
    += result param1
    string ["' does not exist."] notExist
    += result notExist
    run printOnTerminal
end


start exit
    power_off
end


start pwd
    string ["/"] result
    pwd workingDir
    += result workingDir
    string ["_enter"] program
    run printOnTerminal
end


start cd
    if ([exists param1] [c param1] [string ""] == ||)
    string [""] program
    cd _ param1
    else informFileDoesNotExistForCD
end
start informFileDoesNotExistForCD
    //string [""] program
    string ["Directory '"] result
    += result param1
    string ["' does not exist!\n"] secondPart
    += result secondPart
    run printOnTerminal
end

start history
    int [0] i
    value ([v commandHistory size]) commandHistorySize
    -- commandHistorySize
    string [""] program
    string ["\t"] space
    run printHistory
end

start printHistory true
    if ([c i] [c commandHistorySize] <)
    string [""] result
    int [0] j
    = j i
    ++ j
    += result j
    += result space
    value ([v commandHistory c i]) nextCommand
    += result nextCommand
    string ["\n"] endl
    += result endl
    ++ i
    run printOnTerminal
end


start wait
    string ["wait"] program
    int [0] waitingTime
end
start executeWaiting
    triggers each_second
    if ([context program] [string "wait"] == [second_passed] &&)
    index c me [0 0] _ super_editable_text Terminal
    fun Terminal cut_unprotected_area
    run waitFor0 waitFor1 waitFor2
end
start waitFor0
    if([c waitingTime] [int 0] ==)
    string ["||||||||||||||||||||"] result
    ++ waitingTime
    run printOnTerminalUnprotected
post
    break
end
start waitFor1
    if([c waitingTime] [int 1] ==)
    string ["********************"] result
    ++ waitingTime
    run printOnTerminalUnprotected
post
    break
end
start waitFor2
    if([c waitingTime] [int 2] ==)
    string ["--------------------"] result
    int [0] waitingTime
    run printOnTerminalUnprotected
post
    break
end

start sudo
    if ([c param1] [string "rm"] == [c param2] [string "-rf"] == [c param3] [string "--no-preserve-root"] == [c param4] [string "/"] == && && &&)
    string ["Haha. No."] result
    string ["_enter"] program
    run printOnTerminal
    else resetProgram
end
start resetProgram
    string [""] program
end